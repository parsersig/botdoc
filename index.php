<?php
// –í—ã–≤–æ–¥ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
error_log("[DEBUG] Starting Index.php at " . date('Y-m-d H:i:s'));
error_log("[DEBUG] Environment variables:");
error_log("[DEBUG] TELEGRAM_BOT_TOKEN: " . (empty($_ENV['TELEGRAM_BOT_TOKEN']) ? 'NOT SET' : 'SET'));
error_log("[DEBUG] ADMIN_ID: " . $_ENV['ADMIN_ID']);
error_log("[DEBUG] BOT_USERNAME: " . $_ENV['BOT_USERNAME']);
error_log("[DEBUG] CHANNEL_ID: " . $_ENV['CHANNEL_ID']);

require_once 'config.php';

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
function logError($message) {
    global $ERROR_LOG;
    if (defined('ERROR_LOG')) {
        error_log(date('Y-m-d H:i:s') . " [ERROR] " . $message . "\n", 3, $ERROR_LOG);
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç
if (!defined('TELEGRAM_BOT_TOKEN')) {
    logError('Missing TELEGRAM_BOT_TOKEN');
    exit(1);
}
if (!defined('ADMIN_ID')) {
    logError('Missing ADMIN_ID');
    exit(1);
}
if (!defined('BOT_USERNAME')) {
    logError('Missing BOT_USERNAME');
    exit(1);
}

// CHANNEL_ID –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º
$channelId = defined('CHANNEL_ID') ? CHANNEL_ID : null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
$botToken = TELEGRAM_BOT_TOKEN;
$adminId = ADMIN_ID;
$botUsername = BOT_USERNAME;

// URL –¥–ª—è API Telegram
$API_URL = "https://api.telegram.org/bot " . $botToken . "/";

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
define('USERS_FILE', 'users.json');
define('ERROR_LOG', 'error.log');

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ª–æ–≥–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (!file_exists(ERROR_LOG)) {
    file_put_contents(ERROR_LOG, '');
    chmod(ERROR_LOG, 0666);
}

define('ADMIN_ID', $adminId);
define('BOT_USERNAME', $botUsername);

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function loadUsers() {
    if (!file_exists(USERS_FILE)) {
        file_put_contents(USERS_FILE, json_encode([]));
    }
    return json_decode(file_get_contents(USERS_FILE), true) ?: [];
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function saveUsers($users) {
    file_put_contents(USERS_FILE, json_encode($users, JSON_PRETTY_PRINT));
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–∞
function getBotStats() {
    $users = loadUsers();
    $totalUsers = count($users);
    $activeUsers = 0;
    $totalBalance = 0;
    $totalReferrals = 0;

    foreach ($users as $user) {
        $totalBalance += $user['balance'];
        $totalReferrals += $user['referrals'];
        if (!$user['blocked']) {
            $activeUsers++;
        }
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–∞–Ω—Å—É
    $topUsers = $users;
    uasort($topUsers, function($a, $b) {
        return $b['balance'] - $a['balance'];
    });
    $topUsers = array_slice($topUsers, 0, 5, true);

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    $message = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n";
    $message .= "üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>$totalUsers</b>\n";
    $message .= "üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: <b>$activeUsers</b>\n";
    $message .= "üí∞ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: <b>$totalBalance</b> –±–∞–ª–ª–æ–≤\n";
    $message .= "üë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>$totalReferrals</b>\n";
    $message .= "üèÜ <b>–¢–æ–ø-5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>:\n";
    $i = 1;
    foreach ($topUsers as $id => $user) {
        $status = $user['blocked'] ? 'üö´' : '‚úÖ';
        $message .= "$i. ID $id: <b>{$user['balance']}</b> –±–∞–ª–ª–æ–≤ (–†–µ—Ñ: {$user['referrals']}) $status\n";
        $i++;
    }
    $message .= "\n‚è± –û–±–Ω–æ–≤–ª–µ–Ω–æ: " . date('d.m.Y H:i:s');
    return $message;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º cURL
function sendMessage($chat_id, $text, $keyboard = null) {
    global $API_URL;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (!is_numeric($chat_id)) {
        error_log("[ERROR] Invalid chat_id: " . $chat_id);
        return false;
    }

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
    $text = substr($text, 0, 4096); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram

    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    $params = [
        'chat_id' => $chat_id,
        'text' => $text,
        'parse_mode' => 'HTML'
    ];

    if ($keyboard) {
        $params['reply_markup'] = json_encode([
            'keyboard' => $keyboard,
            'resize_keyboard' => true
        ]);
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º cURL –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    $ch = curl_init($API_URL . 'sendMessage');
    curl_setopt_array($ch, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => http_build_query($params),
        CURLOPT_SSL_VERIFYPEER => true, // –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        CURLOPT_TIMEOUT => 5, // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
        CURLOPT_HTTPHEADER => [
            'Content-Type: application/x-www-form-urlencoded'
        ]
    ]);

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    $response = curl_exec($ch);
    $error = curl_error($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if ($error) {
        error_log("[ERROR] sendMessage failed: " . $error);
        return false;
    }
    if ($httpCode !== 200) {
        error_log("[ERROR] sendMessage HTTP error: " . $httpCode);
        return false;
    }

    return $response !== false;
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
function logError($message) {
    $timestamp = date('Y-m-d H:i:s');
    file_put_contents(ERROR_LOG, "[$timestamp] $message\n", FILE_APPEND);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É –æ –≤—ã–≤–æ–¥–µ
function notifyAdminWithdraw($chat_id, $amount) {
    $users = loadUsers();
    $user = $users[$chat_id];
    $message = "üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥\n";
    $message .= "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $chat_id\n";
    $message .= "–°—É–º–º–∞: $amount –±–∞–ª–ª–æ–≤\n";
    $message .= "–ë–∞–ª–∞–Ω—Å: {$user['balance']}\n";
    $message .= "–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {$user['referrals']}\n";
    $message .= "–í—Ä–µ–º—è: " . date('d.m.Y H:i:s');
    sendMessage(ADMIN_ID, $message);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–≤–æ–¥–∞
function updateWithdrawStatus($chat_id, $status) {
    $users = loadUsers();
    if (isset($users[$chat_id])) {
        $users[$chat_id]['withdraw_status'] = $status;
        saveUsers($users);
    }
}

// –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
function getMainKeyboard($isAdmin = false) {
    $keyboard = [
        [['text' => 'üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å', 'callback_data' => 'earn'], ['text' => 'üí≥ –ë–∞–ª–∞–Ω—Å', 'callback_data' => 'balance']],
        [['text' => 'üèÜ –¢–æ–ø', 'callback_data' => 'leaderboard'], ['text' => 'üë• –†–µ—Ñ–µ—Ä–∞–ª—ã', 'callback_data' => 'referrals']],
        [['text' => 'mtx –í—ã–≤–æ–¥', 'callback_data' => 'withdraw'], ['text' => '‚ùì –ü–æ–º–æ—â—å', 'callback_data' => 'help']]
    ];
    if ($isAdmin) {
        $keyboard[] = [['text' => '‚öôÔ∏è –ê–¥–º–∏–Ω', 'callback_data' => 'admin_menu']];
    }
    return $keyboard;
}

function getAdminKeyboard() {
    return [
        [['text' => 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data' => 'admin_stats']],
        [['text' => 'üë§ –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', 'callback_data' => 'admin_users']],
        [['text' => '‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É', 'callback_data' => 'admin_message']],
        [['text' => 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞', 'callback_data' => 'admin_block']],
        [['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_to_main']]
    ];
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
function processUpdate($update) {
    $users = loadUsers();

    if (isset($update['message'])) {
        $chat_id = $update['message']['chat']['id'];
        $text = trim($update['message']['text'] ?? '');

        if (!isset($users[$chat_id])) {
            $users[$chat_id] = [
                'balance' => 0,
                'last_earn' => 0,
                'referrals' => 0,
                'ref_code' => substr(md5($chat_id . time()), 0, 8),
                'referred_by' => null,
                'blocked' => false
            ];
            saveUsers($users);
        }

        if ($users[$chat_id]['blocked']) {
            sendMessage($chat_id, "üö´ –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.");
            return;
        }

        if (strpos($text, '/start') === 0) {
            $ref = explode(' ', $text)[1] ?? null;
            if ($ref && !$users[$chat_id]['referred_by']) {
                foreach ($users as $id => $user) {
                    if ($user['ref_code'] === $ref && $id != $chat_id) {
                        $users[$chat_id]['referred_by'] = $id;
                        $users[$id]['referrals']++;
                        $users[$id]['balance'] += 50;
                        saveUsers($users);
                        sendMessage($id, "üéâ –ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! +50 –±–∞–ª–ª–æ–≤.");
                        break;
                    }
                }
            }

            $msg = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–æ—Ç –ó–∞—Ä–∞–±–æ—Ç–∫–∞!\n–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –±–∞–ª–ª—ã, –ø—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –≤—ã–≤–æ–¥–∏—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞!\n–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: <b>{$users[$chat_id]['ref_code']}</b>";
            $isAdmin = ($chat_id == ADMIN_ID);
            sendMessage($chat_id, $msg, getMainKeyboard($isAdmin));
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∞
        if (strpos($text, '/sendmsg') === 0 && $chat_id == ADMIN_ID) {
            $parts = explode(' ', $text, 3);
            if (count($parts) === 3) {
                $targetId = $parts[1];
                $message = $parts[2];
                sendMessage($targetId, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n$message");
                sendMessage($chat_id, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $targetId");
            }
            return;
        }

        if (strpos($text, '/block') === 0 && $chat_id == ADMIN_ID) {
            $parts = explode(' ', $text, 2);
            if (count($parts) === 2) {
                $targetId = $parts[1];
                if (isset($users[$targetId])) {
                    $users[$targetId]['blocked'] = true;
                    saveUsers($users);
                    sendMessage($chat_id, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $targetId –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω");
                    sendMessage($targetId, "üö´ –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.");
                } else {
                    sendMessage($chat_id, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
                }
            }
            return;
        }

        if (strpos($text, '/withdraw_status') === 0 && $chat_id == ADMIN_ID) {
            $parts = explode(' ', $text, 3);
            if (count($parts) === 3) {
                $targetId = $parts[1];
                $status = $parts[2];
                if (isset($users[$targetId])) {
                    updateWithdrawStatus($targetId, $status);
                    sendMessage($chat_id, "‚úÖ –°—Ç–∞—Ç—É—Å –≤—ã–≤–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $targetId –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: $status");
                    sendMessage($targetId, "‚úÖ –°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–≤–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω: $status");
                } else {
                    sendMessage($chat_id, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
                }
            }
            return;
        }
    } elseif (isset($update['callback_query'])) {
        $chat_id = $update['callback_query']['message']['chat']['id'];
        $data = $update['callback_query']['data'];

        if (!isset($users[$chat_id])) {
            $users[$chat_id] = [
                'balance' => 0,
                'last_earn' => 0,
                'referrals' => 0,
                'ref_code' => substr(md5($chat_id . time()), 0, 8),
                'referred_by' => null,
                'blocked' => false
            ];
            saveUsers($users);
        }

        if ($users[$chat_id]['blocked']) {
            sendMessage($chat_id, "üö´ –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.");
            return;
        }

        $msg = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞";
        $keyboard = null;

        switch ($data) {
            case 'earn':
                $time_diff = time() - $users[$chat_id]['last_earn'];
                if ($time_diff < 60) {
                    $remaining = 60 - $time_diff;
                    $msg = "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ $remaining —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞—Ä–∞–±–æ—Ç–∫–æ–º!";
                } else {
                    $earn = 10;
                    $users[$chat_id]['balance'] += $earn;
                    $users[$chat_id]['last_earn'] = time();
                    $msg = "‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ $earn –±–∞–ª–ª–æ–≤!\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {$users[$chat_id]['balance']}";
                    saveUsers($users);
                }
                break;

            case 'balance':
                $msg = "üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å\n–ë–∞–ª–ª—ã: {$users[$chat_id]['balance']}\n–†–µ—Ñ–µ—Ä–∞–ª—ã: {$users[$chat_id]['referrals']}";
                break;

            case 'leaderboard':
                $sorted = $users;
                uasort($sorted, function($a, $b) {
                    return $b['balance'] <=> $a['balance'];
                });
                $top = array_slice($sorted, 0, 5, true);
                $msg = "üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n";
                $i = 1;
                foreach ($top as $id => $user) {
                    $msg .= "$i. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $id: {$user['balance']} –±–∞–ª–ª–æ–≤\n";
                    $i++;
                }
                break;

            case 'referrals':
                $msg = "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n–í–∞—à –∫–æ–¥: <b>{$users[$chat_id]['ref_code']}</b>\n–†–µ—Ñ–µ—Ä–∞–ª—ã: {$users[$chat_id]['referrals']}\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: t.me/" . BOT_USERNAME . "?start={$users[$chat_id]['ref_code']}\n50 –±–∞–ª–ª–æ–≤ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ!";
                break;

            case 'withdraw':
                $min = 100;
                if ($users[$chat_id]['balance'] < $min) {
                    $msg = "mtx –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤\n–ú–∏–Ω–∏–º—É–º: $min –±–∞–ª–ª–æ–≤\n–í–∞—à –±–∞–ª–∞–Ω—Å: {$users[$chat_id]['balance']}\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –µ—â–µ " . ($min - $users[$chat_id]['balance']) . " –±–∞–ª–ª–æ–≤!";
                } else {
                    $amount = $users[$chat_id]['balance'];
                    $users[$chat_id]['balance'] = 0;
                    $users[$chat_id]['withdraw_status'] = 'pending';
                    saveUsers($users);
                    notifyAdminWithdraw($chat_id, $amount);
                    $msg = "mtx –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ $amount –±–∞–ª–ª–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–∫–æ—Ä–æ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –µ–≥–æ.";
                }
                break;

            case 'help':
                $msg = "‚ùì –ü–æ–º–æ—â—å\nüí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å: –ü–æ–ª—É—á–∞–π—Ç–µ 10 –±–∞–ª–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É\nüë• –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π: 50 –±–∞–ª–ª–æ–≤ –∑–∞ –∫–∞–∂–¥–æ–≥–æ\nmtx –í—ã–≤–æ–¥: –ú–∏–Ω–∏–º—É–º 100 –±–∞–ª–ª–æ–≤\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!";
                break;

            case 'admin_menu':
                if ($chat_id == ADMIN_ID) {
                    sendMessage($chat_id, "‚öôÔ∏è –ê–¥–º–∏–Ω –º–µ–Ω—é:", getAdminKeyboard());
                    return;
                } else {
                    $msg = "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.";
                }
                break;

            case 'admin_stats':
                if ($chat_id == ADMIN_ID) {
                    $msg = getBotStats();
                } else {
                    $msg = "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.";
                }
                break;

            case 'admin_users':
                if ($chat_id == ADMIN_ID) {
                    $msg = "üë§ –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n";
                    foreach ($users as $id => $user) {
                        $status = $user['blocked'] ? 'üö´' : '‚úÖ';
                        $msg .= "$status ID: $id, –ë–∞–ª–∞–Ω—Å: {$user['balance']}, –†–µ—Ñ–µ—Ä–∞–ª—ã: {$user['referrals']}\n";
                    }
                } else {
                    $msg = "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.";
                }
                break;

            case 'admin_message':
                if ($chat_id == ADMIN_ID) {
                    $msg = "‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n/sendmsg ID —Å–æ–æ–±—â–µ–Ω–∏–µ";
                } else {
                    $msg = "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.";
                }
                break;

            case 'admin_block':
                if ($chat_id == ADMIN_ID) {
                    $msg = "üö´ –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n/block ID";
                } else {
                    $msg = "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.";
                }
                break;

            case 'back_to_main':
                $isAdmin = ($chat_id == ADMIN_ID);
                $msg = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é";
                $keyboard = getMainKeyboard($isAdmin);
                break;
        }

        sendMessage($chat_id, $msg, $keyboard);
    }

    saveUsers($users);
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
try {
    $content = file_get_contents("php://input");
    $update = json_decode($content, true);
    if (!$update) {
        throw new Exception('Invalid update');
    }
    processUpdate($update);
} catch (Exception $e) {
    logError($e->getMessage());
    http_response_code(500);
}
?>